"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyController = void 0;
const provider_1 = require("../../utils/decorators/provider");
const proxy_service_1 = require("./proxy.service");
const Boom = require("@hapi/boom");
const config_service_1 = require("../../config/config.service");
const TIMEOUT = config_service_1.configProvider.getNumber('PROXY_TIMEOUT-MILLIS');
let ProxyController = class ProxyController {
    constructor(service) {
        this.service = service;
    }
    proxyRequest(request, h) {
        const mustProxy = this.service.isProxyEnabled();
        const uri = this.service.getProxyUri();
        if (!mustProxy) {
            throw Boom.notFound('No mock was found for this endpoint and method. Proxying is also disabled.');
        }
        return h.proxy({
            uri,
            passThrough: true,
            xforward: true,
            timeout: TIMEOUT
        });
    }
};
ProxyController = __decorate([
    provider_1.Provider(),
    __metadata("design:paramtypes", [proxy_service_1.ProxyService])
], ProxyController);
exports.ProxyController = ProxyController;
//# sourceMappingURL=proxy.controller.js.map