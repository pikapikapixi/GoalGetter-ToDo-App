"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.optionsFromConfig = void 0;
const merge = (array) => array.reduce((acc, v) => ({ ...acc, ...v }), {});
const definitionFromConfig = ([req, res]) => {
    var _a, _b, _c, _d, _e;
    const [method, ...pathParts] = req.split(" ");
    const path = pathParts.join(" ");
    const headers = ((_b = (_a = res === null || res === void 0 ? void 0 : res[0]) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b[0]) || {};
    const code = ((_c = res === null || res === void 0 ? void 0 : res[0]) === null || _c === void 0 ? void 0 : _c.status) || (method === 'POST' ? 201 : 200);
    return {
        method, path,
        response: {
            code,
            delay: (_d = res === null || res === void 0 ? void 0 : res[0]) === null || _d === void 0 ? void 0 : _d.delay,
            body: ((_e = res === null || res === void 0 ? void 0 : res[0]) === null || _e === void 0 ? void 0 : _e.body) || "",
            headers: headers,
        },
    };
};
exports.optionsFromConfig = (config) => {
    const mocks = Object.entries(merge(config.mock || []))
        .map(definitionFromConfig);
    const data = config.data && Object.entries(merge(config.data))
        .map(([key, values]) => ({ key, value: merge(values) }))
        .reduce((acc, { key, value }) => ({ ...acc, [key]: value }), {});
    return { mocks, data };
};
//# sourceMappingURL=mock-options.js.map